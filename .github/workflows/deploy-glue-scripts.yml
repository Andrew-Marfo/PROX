name: Deploy Glue Scripts to S3

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SCRIPTS: |
    bronze_ingestion_script.py,bronze,/scripts/bronze_ingestion_script.py
    transformations_script.py,bronze,/scripts/transformations_script.py
    gold_data_curation_script.py,gold,/scripts/gold_data_curation_script.py
    s3_to_redshift_script.py,gold,/scripts/s3_to_redshift_script.py

jobs:
  deploy-glue-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Terraform Init
        run: terraform init

      - name: Get bronze bucket name
        id: bronze_bucket
        run: |
          unset TF_LOG TF_LOG_PATH
          BUCKET=$(terraform output -raw bronze_bucket_name 2>/dev/null)
          echo "value=$BUCKET" >> $GITHUB_OUTPUT

      - name: Get gold bucket name
        id: gold_bucket
        run: |
          unset TF_LOG TF_LOG_PATH
          BUCKET=$(terraform output -raw gold_bucket_name 2>/dev/null)
          echo "value=$BUCKET" >> $GITHUB_OUTPUT

      - name: Deploy Glue scripts
        run: |
          echo "$SCRIPTS" | while IFS="," read -r LOCAL BUCKET REMOTE; do
            if [ "$BUCKET" = "bronze" ]; then
              BUCKET_NAME="${{ steps.bronze_bucket.outputs.value }}"
            elif [ "$BUCKET" = "gold" ]; then
              BUCKET_NAME="${{ steps.gold_bucket.outputs.value }}"
            else
              echo "❌ Unknown bucket: $BUCKET"
              exit 1
            fi

            # Check if bucket exists
            if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
              echo "Bucket: $BUCKET_NAME exists."
            else
              echo "Bucket $BUCKET_NAME does not exist. Skipping $LOCAL."
              continue
            fi

            # Remove existing object if it exists
            if aws s3 ls "s3://$BUCKET_NAME$REMOTE" 2>/dev/null; then
              echo "Deleting existing $REMOTE"
              aws s3 rm "s3://$BUCKET_NAME$REMOTE"
            else
              echo "No existing $REMOTE found"
            fi

            # Upload new script
            echo "Uploading new $LOCAL to $REMOTE"
            aws s3 cp "glue_scripts/$LOCAL" "s3://$BUCKET_NAME$REMOTE" --only-show-errors
          done

      - name: Complete
        run: echo "Workflow completed."