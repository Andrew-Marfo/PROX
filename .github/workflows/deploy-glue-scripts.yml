name: Deploy Glue Scripts to S3

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SCRIPTS: |
    bronze_ingestion_script.py:/scripts/bronze_ingestion_script.py
    transformations_script.py:/scripts/transformations_script.py
    gold_data_curation_script.py:/scripts/gold_data_curation_script.py
    s3_to_redshift_script.py:/scripts/s3_to_redshift_script.py

jobs:
  deploy-glue-scripts:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./  # Adjust to your Terraform directory, e.g., aws_infra/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Terraform Init
        run: terraform init

      - name: Get bronze bucket name
        id: bronze_bucket
        run: |
          unset TF_LOG TF_LOG_PATH
          OUTPUT=$(terraform output bronze_bucket_name 2>/dev/null || echo "failed")
          echo "Raw output: [$OUTPUT]"
          if [ "$OUTPUT" = "failed" ]; then
            echo "❌ Terraform output for bronze_bucket_name failed"
            exit 1
          fi
          BUCKET=$(echo "$OUTPUT" | sed -n 's/.*"\(.*\)"/\1/p' | tr -d '\n' | tr -d '\r')
          echo "Extracted bucket: [$BUCKET]"
          if [ -z "$BUCKET" ]; then
            echo "❌ Failed to extract bronze_bucket_name"
            exit 1
          fi
          if [[ ! "$BUCKET" =~ ^[a-z0-9.-]{3,63}$ ]]; then
            echo "❌ Invalid bucket name: $BUCKET"
            exit 1
          fi
          echo "exists=false" >> $GITHUB_OUTPUT
          if aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
            echo "Bucket $BUCKET exists."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Bucket $BUCKET does not exist."
          fi
          echo "value=$BUCKET" >> $GITHUB_OUTPUT

      - name: Debug Outputs
        run: |
          echo "Bronze bucket: ${{ steps.bronze_bucket.outputs.value }} (exists: ${{ steps.bronze_bucket.outputs.exists }})"
          cat $GITHUB_OUTPUT

      - name: Deploy Glue scripts
        if: steps.bronze_bucket.outputs.exists == 'true'
        run: |
          BUCKET_NAME="${{ steps.bronze_bucket.outputs.value }}"
          echo "$SCRIPTS" | while IFS=":" read -r LOCAL REMOTE; do
            echo "Handling script: $LOCAL -> $REMOTE"
            if aws s3 ls "s3://$BUCKET_NAME$REMOTE" 2>/dev/null; then
              echo "Deleting existing $REMOTE"
              aws s3 rm "s3://$BUCKET_NAME$REMOTE"
            else
              echo "No existing $REMOTE found"
            fi
            echo "Uploading new $LOCAL to $REMOTE"
            aws s3 cp "glue_scripts/$LOCAL" "s3://$BUCKET_NAME$REMOTE" --only-show-errors
          done

      - name: Complete
        run: echo "Workflow completed."